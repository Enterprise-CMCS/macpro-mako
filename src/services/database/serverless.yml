service: ${self:custom.project}-database

frameworkVersion: "3"

package:
  individually: true

plugins:
  - serverless-stack-termination-protection
  - "@stratiformdigital/serverless-s3-security-helper"
  - "@stratiformdigital/serverless-iam-helper"

provider:
  name: aws
  region: us-east-1
  stackTags:
    PROJECT: ${self:custom.project}
    SERVICE: ${self:service}

custom:
  project: ${env:PROJECT}
  iam:
    role:
      path: /delegatedadmin/developer/
      permissionsBoundary: arn:aws:iam::${aws:accountId}:policy/cms-cloud-admin/developer-boundary-policy
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "*"
  serverlessTerminationProtection:
    stages: # Apply CloudFormation termination protection for these stages
      - master
      - val
      - production
  tableName: ${self:custom.project}-${self:service}-table
functions:
  seeddatabase:
    handler: handlers/seeddatabase.handler

resources:
  Resources:
    # LambdaRole:
    #   Type: AWS::IAM::Role
    #   Properties:
    #     AssumeRolePolicyDocument:
    #       Version: "2012-10-17"
    #       Statement:
    #         - Effect: Allow
    #           Principal:
    #             Service:
    #               - lambda.amazonaws.com
    #           Action:
    #             - sts:AssumeRole
    #     Path: /delegatedadmin/developer/
    #     PermissionsBoundary: arn:aws:iam::${aws:accountId}:policy/cms-cloud-admin/developer-boundary-policy
    #     Policies:
    #       - PolicyName: dynamodbAccessRole
    #         PolicyDocument:
    #           Version: "2012-10-17"
    #           Statement:
    #             - Effect: Allow
    #               Action:
    #                 - dynamodb:*
    #               Resource: "*"
    #             - Effect: Allow
    #               Action:
    #                 - logs:*
    #               Resource: "*"
    Table:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    InitializeDynamoDB:
      Type: Custom::InitFunction
      DependsOn: Table
      Properties:
        ServiceToken:
          Fn::GetAtt: [SeeddatabaseLambdaFunction, "Arn"]
        DynamoTableName:
          Ref: Table
