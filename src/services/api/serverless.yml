service: ${self:custom.project}-api
frameworkVersion: "3"
package:
  individually: true
plugins:
  - serverless-bundle
  - serverless-stack-termination-protection
  - "@stratiformdigital/serverless-iam-helper"
  - "@stratiformdigital/serverless-s3-security-helper"
provider:
  name: aws
  runtime: nodejs18.x
  logs:
    restApi: true
  region: ${env:REGION_A}
  stackTags:
    PROJECT: ${self:custom.project}
    SERVICE: ${self:service}
  iam:
    role:
      path: /delegatedadmin/developer/
      permissionsBoundary: arn:aws:iam::${aws:accountId}:policy/cms-cloud-admin/developer-boundary-policy

custom:
  project: ${env:PROJECT}
  accountId: !Sub "${AWS::AccountId}"
  stage: ${opt:stage, self:provider.stage}
  serverlessTerminationProtection:
    stages: # Apply CloudFormation termination protection for these stages
      - master
      - val
      - production
functions:
  getPosts:
    handler: handlers/getPosts.handler
    maximumRetryAttempts: 0
    events:
      - http:
          path: /posts
          method: get
          cors: true
  getPost:
    handler: handlers/getPost.handler
    maximumRetryAttempts: 0
    events:
      - http:
          path: /posts/{id}
          method: get
          cors: true
  createPost:
    handler: handlers/createPost.handler
    maximumRetryAttempts: 0
    events:
      - http:
          path: /posts
          method: post
          cors: true
  deletePost:
    handler: handlers/deletePost.handler
    maximumRetryAttempts: 0
    events:
      - http:
          path: /posts/{id}
          method: delete
          cors: true
  updatePost:
    handler: handlers/updatePost.handler
    maximumRetryAttempts: 0
    events:
      - http:
          path: /posts/{id}
          method: put
          cors: true
resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId: !Ref ApiGatewayRestApi
    GatewayResponseDefault5XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId: !Ref ApiGatewayRestApi
  Outputs:
    ApiGatewayRestApiName:
      Value: !Ref ApiGatewayRestApi
    ApiGatewayRestApiUrl:
      Value: !Sub https://${ApiGatewayRestApi}.execute-api.${self:provider.region}.amazonaws.com/${self:custom.stage}
    Region:
      Value: !Sub ${AWS::Region}
