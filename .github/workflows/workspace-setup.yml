name: Workspace Setup

on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * SUN"

concurrency:
  group: ${{ startsWith(github.ref_name, 'snyk-') && 'snyk' || github.ref_name }}-test-ws-setup

jobs:
  test:
    runs-on: macos-12
    timeout-minutes: 120 # MacOS runners are more expensive than linux, so we want to be sure to stop any stuck builds.
    env:
      STAGE_NAME: test-ws-setup
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - uses: docker/setup-qemu-action@v2
        with:
          platforms: "amd64"

      - uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_TO_ASSUME }}
          aws-region: us-east-1
          role-duration-seconds: 10800

      - name: Run workspace setup
        run: sh run.sh

      - name: Test install
        run: |
          source /tmp/.profile
          nvm use
          direnv allow
          direnv exec run install

      - name: Test deploy
        run: |
          source /tmp/.profile
          if ! direnv exec run deploy --stage $STAGE_NAME; then
            echo "::error::Deployment failed"
            exit 1
          fi
        continue-on-error: true
        id: deploy

      - name: Check deploy status
        if: steps.deploy.outcome != 'success'
        run: |
          echo "::error::Deployment step failed, checking logs..."
          # Add additional diagnostic commands
          exit 1

      - name: Test test
        run: |
          source /tmp/.profile
          direnv exec run test --stage $STAGE_NAME

      - name: Test destroy
        run: |
          source /tmp/.profile
          direnv exec run destroy --stage $STAGE_NAME --verify false --wait false
