name: Security Group Cleanup

on:
  # schedule:
  #   - cron: "0 2 * * *"
  # workflow_dispatch:
  push:
    branches:
      - "dfix"

jobs:
  security-group-cleanup:
    name: Security Group Cleanup
    runs-on: ubuntu-20.04

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: ./.github/actions/setup # We need this largely for the PROJECT variable setting
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_TO_ASSUME }}
          aws-region: us-east-1
          role-duration-seconds: 10800

      - name: Clean Up Unassigned Security Groups
        id: runningStages
        run: |
          # Step 1, clean up available ENIs
          enilist=(`aws ec2 describe-network-interfaces \
              --filters Name=status,Values="available" \
              --query "NetworkInterfaces[].NetworkInterfaceId" \
              --output text`)
          for i in "${enilist[@]}"
          do
          echo "Deleting $i..."
          # aws ec2 delete-network-interface --network-interface-id $i
          done

          # Step 2, get a list of all security groups attached to ENIs
          inusesgs=(`aws ec2 describe-network-interfaces \
              --query "NetworkInterfaces[].Groups[].GroupId" \
              --output text`)

          # Step 3, get a list of all security groups.
          allsgs=(`aws ec2 describe-security-groups \
              --query "SecurityGroups[].GroupId" \
              --output text`)

          # Step 4, find the difference and delete
          for i in "${allsgs[@]}"
          do
              if [[ " ${inusesgs[*]} " =~ " ${i} " ]]; then
                  echo "Keping $i as it is in use"
              else
                  echo "Deleting $i as it is not in use..."
                  aws ec2 delete-security-group --group-id $i
              fi
          done
